{"version":3,"sources":["img/Payment.svg","img/PaymentSelected.svg","img/Clients.svg","img/ClientsSelected.svg","img/More.svg","img/MoreSelected.svg","img/QrCode.svg","img/QrCodeSelected.svg","Config.js","Components/fonts.js","Components/Spacer.js","Components/Bullet.js","Components/ListItem.js","Components/DataList.js","connectionSlice.js","util/socketutil.js","Views/Connections/index.js","Views/Scan/index.js","Views/Menu/index.js","Components/Icon.js","credentialsSlice.js","Views/Credentials/index.js","Navigations.js","socketSlice.js","Components/Socket.js","App.js","index.js"],"names":["PRIMARY_BLUE","PRIMARY_YELLOW","GRAY_45","_BASEURL","Platform","OS","BASEURL","_SOCKETBASE","SOCKETBASE","H2","styled","Text","color","marginTop","Paragraph","View","size","item","onPress","expanded","console","log","archived","title","newItem","Name","BulletContainer","ItemWrapper","Wrapper","ExpansionWrapper","ActionsBullet","Bullet","TouchableHighlight","e","Spacer","Button","SectionHeaderTextWrap","HeaderText","ListView","SectionHeader","text","additionalText","DataList","data","renderItem","sections","_data","sectionedData","map","length","grouped","Map","forEach","sectionKey","has","set","get","groupedArray","Array","from","SectionList","renderSectionHeader","section","ListItem","keyExtractor","index","toString","FlatList","connectionSlice","createSlice","name","initialState","connections","reducers","setConnections","state","action","payload","addConnection","push","updateConnection","filter","i","id","actions","SocketUtil","socket","markAsSeen","a","send","type","Connections","useSelector","useState","socketUtil","setsocketUtil","sortedConnections","sort","first","second","otherParty","dispatch","useDispatch","useEffect","fetch","headers","Accept","proofs","json","test","getConnections","_item","Scan","Menu","Icon","children","src","props","credentialsSlice","credentials","setCredentials","addCredentials","CredentialsView","SafeAreaView","Wallet","getProofs","Nav","createBottomTabNavigator","platformOptions","height","undefined","Navigations","newConnections","x","newCredentials","Navigator","initialRouteName","screenOptions","activeTintColor","headerTitleAlign","headerStyle","backgroundColor","headerTitleStyle","fontSize","tabBarItemStyle","margin","tabBarLabelStyle","overflow","marginLeft","tabBarBadgeStyle","top","tabBarLabelPosition","tabBarStyle","borderBottomLeftRadius","borderBottomRightRadius","Screen","component","options","tabBarIcon","focused","ClientsSelected","Clients","tabBarBadge","Credentials","PaymentSelected","Payment","QrCodeSelected","QrCode","MoreSelected","More","socketSlice","setSocket","removeSocket","Socket","state_socket","io","on","msg","initSocket","close","style","flexGrow","queryClient","QueryClient","store","configureStore","reducer","App","useColorScheme","QueryClientProvider","client","NavigationContainer","AppRegistry","registerComponent","appName","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.4d3d7da3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Payment.520c59e4.svg\";","export default __webpack_public_path__ + \"static/media/PaymentSelected.f28be684.svg\";","export default __webpack_public_path__ + \"static/media/Clients.e02581c7.svg\";","export default __webpack_public_path__ + \"static/media/ClientsSelected.f0009662.svg\";","export default __webpack_public_path__ + \"static/media/More.ec103ff1.svg\";","export default __webpack_public_path__ + \"static/media/MoreSelected.fa7e04c2.svg\";","export default __webpack_public_path__ + \"static/media/QrCode.ed1c23a7.svg\";","export default __webpack_public_path__ + \"static/media/QrCodeSelected.623bdbd9.svg\";","import { Platform } from 'react-native';\n\n// Colors\nexport const BLUE = '#0847B7';\nexport const CYAN = '#B6E7FB';\nexport const DARK_BLUE = '#001F4A';\nexport const DARK_CYAN = '#79CBEC';\nexport const DARK_GREEN = '#00643F';\nexport const DARK_RED = '#9E0426';\nexport const PRIMARY_BLUE = '#003580';\nexport const PRIMARY_YELLOW = '#FDB916';\nexport const YELLOW = '#FEDC8B';\nexport const LIGHT_YELLOW = '#FFEEC5';\nexport const LIGHT_GREEN = '#E1F4F0';\nexport const GRAY_3 = '#F7F7F7';\nexport const GRAY_8 = '#EBEBEB';\nexport const GRAY_12 = '#E0E0E0';\nexport const GRAY_25 = '#BFBFBF';\nexport const GRAY_45 = '#737373';\nexport const GRAY_75 = '#404040';\nexport const LIGHT_CYAN = '#DBF3FD';\nexport const PETROL = '#0075A4';\n\n// Header\nexport const HEADER_HEIGHT = '48px';\nexport const HEADER_PADDING_TOP = '20px';\nexport const HEADER_PADDING_BOTTOM = '12px';\nexport const HEADER_PADDING_HORIZONTAL = '16px';\n\n// Notifications\nexport const NOTIFICATION_HEIGHT = '90px';\nexport const NOTIFICATION_RADIUS = '8px';\nexport const NOTIFICATION_PADDING = '24px';\nexport const NOTIFICATION_H_MARGIN = '20px';\nexport const NOTIFICATION_V_MARGIN = '12px';\n\n// Month selector\nexport const MONTH_SELECTOR_HEIGHT = '56px';\nexport const MONTH_SELECTOR_PADDING_H = '72px';\nexport const MONTH_SELECTOR_PADDING_V = '17px';\n\n// Client\nexport const CUSTOMER_NAME_FONT_SIZE = '14px';\n\n// Buttons\nexport const BUTTON_BORDER_RADIUS = '6px';\nexport const BUTTON_HEIGHT = '56px';\n\n// API base url\n//export const BASEURL = 'https://smartmoneyapi.azurewebsites.net';\n//export const BASEURL = 'http://localhost:3000';\n//export const BASEURL = 'https://smserviceprovider.kela.fi/mobile-api';\n\nlet _BASEURL = '/api';\nif (Platform.OS !== 'web') {\n  _BASEURL = 'http://localhost:4000/api';\n}\nexport const BASEURL = _BASEURL;\nlet _SOCKETBASE = '';\nif (Platform.OS !== 'web') {\n  _SOCKETBASE = 'http://localhost:4000';\n}\nexport const SOCKETBASE = _SOCKETBASE;\n// Fixed therapist Id for demo purposes\n//export const therapistId = 'b1984a5e-3204-4f2a-8049-444111b4277a';\nexport const therapistId = '010185-902F';\n","import styled from 'styled-components/native';\nimport {PRIMARY_BLUE} from '../Config';\n\n// prettier-ignore\nconst H1 = styled.Text`\n  fontStyle: normal;\n  fontWeight: bold;\n  fontSize: 17px;\n  lineHeight: 22px;\n  color: ${({color}) => color ? color : 'black'};\n`;\n\n// prettier-ignore\nconst H2 = styled.Text`\n  fontStyle: normal;\n  fontWeight: 700;\n  fontSize: 15px;\n  lineHeight: 22px;\n  color: ${({color}) => color ? color : 'black'};\n  marginTop: ${({marginTop}) => marginTop ? marginTop : '0px'};\n`;\n\n// prettier-ignore\nconst H3 = styled.Text`\n  fontStyle: normal;\n  fontWeight: 500;\n  fontSize: 13px;\n  lineHeight: 15.6px;\n  color: ${({color}) => color ? color : 'black'};\n`;\n\n// prettier-ignore\nconst H4 = styled.Text`\n  fontStyle: normal;\n  fontSize: 10px;\n  lineHeight: 10px;\n  color: ${({color}) => color ? color : 'black'};\n`;\n\n// prettier-ignore\nconst Paragraph = styled.Text`\n  fontStyle: normal;\n  fontSize: 15px;\n  fontWeight: 400;\n  lineHeight: 22px;\n  color: ${({color}) => color ? color : 'black'};\n`;\n\n// prettier-ignore\nconst ViewHeading = styled.Text`\n  fontStyle: normal;\n  fontSize: 17px;\n  fontWeight: 700;\n  lineHeight: 22px;\n  color: ${({color}) => color ? color : 'black'};\n`;\n\n// prettier-ignore\nconst Title = styled.Text`\n  fontStyle: normal;\n  fontSize: 16px;\n  fontWeight: bold;\n  lineHeight: 22px;\n  color: ${({color}) => color ? color : 'black'};\n`;\n\n// prettier-ignore\nconst PaymentSum = styled.Text`\n  fontStyle: normal;\n  fontSize: 32px;\n  fontWeight: 700;\n  lineHeight: 38px;\n  color: ${PRIMARY_BLUE};\n`;\n\nexport {H1, H2, H3, H4, Paragraph, ViewHeading, Title, PaymentSum};\n","import styled from 'styled-components/native';\n\nexport default styled.View`\n  width: ${({size}) => (size ? size : '16px')};\n  height: ${({size}) => (size ? size : '16px')};\n`;\n","import styled from 'styled-components/native/dist/styled-components.native.esm';\nimport { PRIMARY_YELLOW } from '../Config';\n\n// prettier-ignore\nexport default styled.View`\n  height: 10px;\n  width: 10px;\n  borderRadius: 5px;\n  backgroundColor: ${({color}) => color ? color : PRIMARY_YELLOW}\n`;\n","import React from 'react';\nimport { Button, Text, TouchableHighlight, View } from 'react-native';\nimport { H2, Paragraph } from './fonts';\nimport { GRAY_12, GRAY_25, GRAY_45, GRAY_8, PRIMARY_BLUE } from '../Config';\nimport Spacer from './Spacer';\nimport styled from 'styled-components/native';\nimport Bullet from './Bullet';\n\nexport default ({ item, onPress, expanded }) => {\n  console.log(item, onPress, expanded);\n  if (!item) {\n    return null;\n  }\n  const { archived = false, title, newItem } = item;\n  const color = archived ? GRAY_45 : 'black';\n  //const { customer, appointments, onPress } = props;\n  //const { firstName, lastName, newActions, id } = customer;\n\n  const Name = styled.View`\n    flex-direction: row;\n  `;\n\n  const BulletContainer = styled.View`\n    padding-top: 6px;\n    padding-left: 8px;\n  `;\n\n  const ItemWrapper = styled.View`\n    padding-vertical: 8px;\n    border-top-width: 1px;\n    border-bottom-width: 1px;\n    border-color: ${GRAY_12};\n    flex-direction: row;\n    justify-content: space-between;\n    padding-right: 12px;\n  `;\n\n  const Wrapper = styled.View`\n    padding-horizontal: 4px;\n  `;\n\n  const ExpansionWrapper = styled.View`\n    margin-top: 8px;\n    padding-bottom: 8px;\n  `;\n\n  const ActionsBullet = () => (\n    <BulletContainer>\n      <Bullet />\n    </BulletContainer>\n  );\n\n  return (\n    <TouchableHighlight onPress={e => onPress(e)}>\n      <Wrapper>\n        <ItemWrapper>\n          <Name>\n            <H2 color={color}>{title}</H2>\n            <Spacer size=\"4px\" />\n            <Paragraph color={color}>{'text'}</Paragraph>\n          </Name>\n          {newItem ? <ActionsBullet /> : null}\n        </ItemWrapper>\n        {expanded ? (\n          <ExpansionWrapper>\n            <Text>MOAR STUFF</Text>\n            <Button title=\"Poista\"></Button>\n          </ExpansionWrapper>\n        ) : null}\n      </Wrapper>\n    </TouchableHighlight>\n  );\n};\n","import React from 'react';\nimport { FlatList, SectionList, Text, View } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  BLUE,\n  CYAN,\n  DARK_BLUE,\n  DARK_CYAN,\n  GRAY_45,\n  GRAY_8,\n  PETROL,\n  PRIMARY_BLUE,\n} from '../Config';\nimport ListItem from './ListItem';\n\nconst SectionHeaderTextWrap = styled.View`\n  background-color: ${GRAY_8};\n  margin-top: 4px;\n  margin-bottom: 4px;\n  padding-vertical: 4px;\n  padding-horizontal: 4px;\n`;\n\nconst HeaderText = styled.Text`\n  color: ${GRAY_45};\n  font-weight: 700;\n`;\n\nconst ListView = styled.View`\n  background-color: white;\n`;\n\nconst SectionHeader = ({ text, additionalText }) => {\n  return (\n    <SectionHeaderTextWrap>\n      <HeaderText>{text}</HeaderText>\n    </SectionHeaderTextWrap>\n  );\n};\n\nconst DataList = ({ data, renderItem, sections = false }) => {\n  let _data = data;\n  const onPress = e => {\n    console.log('pressed');\n  };\n  const _renderItem = ({ item }) => {\n    console.log('item to render', item);\n    return <ListItem onPress={item.archived ? onPress : onPress} item={item} />;\n  };\n  const _renderSectionHeader = ({ section }) => {\n    console.log('section', section);\n    const title = 'title';\n    return <SectionHeader text={section.title} additionalText=\"lisäteksti\" />;\n  };\n  if (sections) {\n    console.log('arranging for sections');\n    const sectionList = [];\n    const sectionedData = data.map(item => {\n      return { title: item.title[0], data: item };\n    });\n    console.log('sectioned', sectionedData);\n    if (sectionedData && sectionedData.length > 0) {\n      const grouped = new Map();\n      sectionedData.forEach(item => {\n        const sectionKey = item.title[0];\n        if (!grouped.has(sectionKey)) {\n          grouped.set(sectionKey, [item.data]);\n        } else {\n          grouped.set(sectionKey, [...grouped.get(sectionKey), item.data]);\n        }\n      });\n      const groupedArray = Array.from(grouped, ([title, value]) => ({\n        title: title,\n        data: value,\n      }));\n      console.log(groupedArray);\n      _data = groupedArray;\n    }\n  }\n\n  return (\n    <ListView>\n      {sections ? (\n        <SectionList\n          sections={_data}\n          renderSectionHeader={_renderSectionHeader}\n          renderItem={_renderItem}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      ) : (\n        <FlatList\n          data={data}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      )}\n    </ListView>\n  );\n};\n\nexport default DataList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const connectionSlice = createSlice({\n    name: 'state',\n    initialState: {\n        connections: [],\n    },\n    reducers: {\n        setConnections: (state, action) => {\n            console.log('setConnections called', action);\n            state.connections = action.payload;\n        },\n        addConnection: (state, action) => {\n            state.connections = state.connections.push(action.payload);\n        },\n        updateConnection: (state, action) => {\n            state.connections = [\n                action.payload,\n                ...state.connections.filter(i => i.id !== action.payload.id),\n            ];\n        },\n    },\n});\n\nexport const { setConnections, addConnection, updateConnection } =\n  connectionSlice.actions;\n\nexport default connectionSlice.reducer;\n","const SocketUtil = socket => {\n    const markAsSeen = async item => {\n        console.log('marking item', item, 'as seen...');\n        console.log('socket', socket);\n        socket.send({ type: 'seen', data: item.id });\n    };\n\n    return {\n        markAsSeen,\n    };\n};\n\nexport default SocketUtil;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Text, View } from 'react-native';\nimport DataList from '../../Components/DataList';\nimport ListItem from '../../Components/ListItem';\nimport { BASEURL } from '../../Config';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setConnections, updateConnection } from '../../connectionSlice';\nimport SocketUtil from '../../util/socketutil';\n\nconst Connections = () => {\n  const socket = useSelector(state => state.socket.socket);\n  const [socketUtil, setsocketUtil] = useState(null);\n  if (socket && !socketUtil) {\n    setsocketUtil(SocketUtil(socket));\n  }\n  const connections = useSelector(state => {\n    console.log('state connections', state.connections);\n    return state.connections.connections;\n  });\n  const sortedConnections = [...connections];\n  sortedConnections.sort((first, second) => {\n    if (first.otherParty < second.otherParty) {\n      return -1;\n    }\n    if (first.otherParty > second.otherParty) {\n      return 1;\n    }\n    return 0;\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getConnections = async () => {\n      const proofs = await fetch(`${BASEURL}/connections`, {\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n        },\n      });\n      const data = await proofs.json();\n      console.log('data', data);\n      const test = await fetch(`${BASEURL}/hello`, {\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n        },\n      });\n      console.log('test', test);\n      //setConnections(data);\n      if(test && data.length !== connections.length){\n        dispatch(setConnections(data));\n      }\n    };\n    getConnections();\n  }, [dispatch]);\n\n  const connectionItem = ({ item }) => {\n    let _item = { ...item };\n    _item.title = item.otherParty;\n    const onPress = (e, i) => {\n      console.log('pressed connection item', i);\n      i.expanded = !i.expanded;\n      if (i.newItem) {\n        socketUtil.markAsSeen(i);\n      }\n      dispatch(updateConnection(i));\n    };\n\n    return (\n      <ListItem\n        onPress={e => onPress(e, _item)}\n        expanded={_item.expanded}\n        item={_item}\n      />\n    );\n  };\n\n  return (\n    <View>\n      <DataList data={sortedConnections} renderItem={connectionItem} />\n    </View>\n  );\n};\n\nexport default Connections;\n","import React from 'react';\nimport { View } from 'react-native';\n\nconst Scan = () => {\n  return <View />;\n};\n\nexport default Scan;\n","import React from 'react';\nimport { View } from 'react-native';\n\nconst Menu = () => {\n  return <View />;\n};\n\nexport default Menu;\n","import React from 'react';\nimport {Platform} from 'react-native';\n\nconst Icon = ({children}) => {\n  if (Platform.OS === 'web') {\n    return <img src={children.type} {...children.props} />;\n  }\n  return children;\n};\n\nexport default Icon;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const credentialsSlice = createSlice({\n  name: 'state',\n  initialState: {\n    credentials: [],\n  },\n  reducers: {\n    setCredentials: (state, action) => {\n      state.credentials = action.payload;\n    },\n    addCredentials: (state, action) => {\n      state.credentials = state.credentials.push(action.payload);\n    },\n  },\n});\n\nexport const { setCredentials, addCredentials } = credentialsSlice.actions;\n\nexport default credentialsSlice.reducer;\n","import React from 'react';\nimport { SafeAreaView, Text } from 'react-native';\nimport { useState, useEffect } from 'react';\nimport { BASEURL, GRAY_3 } from '../../Config';\nimport DataList from '../../Components/DataList';\nimport ListItem from '../../Components/ListItem';\nimport styled from 'styled-components/native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCredentials } from '../../credentialsSlice';\n\nconst CredentialsView = styled.SafeAreaView`\n  background-color: ${GRAY_3};\n`;\n\nconst Wallet = () => {\n  //const [credentials, setCredentials] = useState([]);\n  const credentials = useSelector(state => {\n    console.log('state', state);\n    return state.credentials.credentials;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getProofs = async () => {\n      const proofs = await fetch(`${BASEURL}/proofs`, {\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n        },\n      });\n      const data = await proofs.json();\n      console.log('proofs', data);\n      //setCredentials(data);\n      dispatch(setCredentials(data));\n    };\n    getProofs();\n  }, [dispatch]);\n  return (\n    <CredentialsView>\n      {/*<Text>{JSON.stringify(credentials)}</Text>*/}\n      <DataList data={credentials} renderItem={ListItem} sections />\n    </CredentialsView>\n  );\n};\n\nexport default Wallet;\n","import React from 'react';\nimport { Text } from 'react-native';\nimport Payment from './img/Payment.svg';\nimport PaymentSelected from './img/PaymentSelected.svg';\nimport Clients from './img/Clients.svg';\nimport ClientsSelected from './img/ClientsSelected.svg';\nimport More from './img/More.svg';\nimport MoreSelected from './img/MoreSelected.svg';\nimport QrCode from './img/QrCode.svg';\nimport QrCodeSelected from './img/QrCodeSelected.svg';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { PRIMARY_BLUE, PRIMARY_YELLOW } from './Config';\nimport Connections from './Views/Connections';\nimport Scan from './Views/Scan';\nimport Menu from './Views/Menu';\nimport Icon from './Components/Icon';\nimport { Platform } from 'react-native';\nimport Credentials from './Views/Credentials';\nimport { useSelector } from 'react-redux';\n\nconst Nav = createBottomTabNavigator();\n\nconst platformOptions = {\n  height: Platform.OS === 'web' ? 40 : undefined,\n};\n\nconst Navigations = () => {\n  const connections = useSelector(state => {\n    return state.connections.connections;\n  });\n  const credentials = useSelector(state => {\n    return state.credentials.credentials;\n  });\n\n  const newConnections = connections.filter(x => x.newItem);\n  const newCredentials = credentials.filter(x => x.newItem);\n  console.log('newConnections', newConnections);\n  console.log('credentials', credentials);\n\n  return (\n    <Nav.Navigator\n      initialRouteName=\"Yhteydet\"\n      screenOptions={{\n        activeTintColor: PRIMARY_BLUE,\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: PRIMARY_BLUE,\n          ...platformOptions,\n        },\n        headerTitleStyle: {\n          color: 'white',\n          fontSize: 14,\n        },\n        tabBarItemStyle: {\n          margin: 0,\n        },\n        tabBarLabelStyle: {\n          overflow: 'visible',\n          marginLeft: 0,\n        },\n        tabBarBadgeStyle: {\n          backgroundColor: PRIMARY_YELLOW,\n          height: 18,\n          fontSize: 12,\n          top: 1,\n        },\n        tabBarLabelPosition: 'below-icon',\n        tabBarStyle: {\n          borderBottomLeftRadius: Platform.OS === 'web' ? '3.5vh' : '0',\n          borderBottomRightRadius: Platform.OS === 'web' ? '3.5vh' : '0',\n        },\n      }}>\n      <Nav.Screen\n        name=\"Yhteydet\"\n        component={Connections}\n        options={{\n          tabBarIcon: ({ size, focused, color }) => {\n            return focused ? (\n              <Icon>\n                <ClientsSelected />\n              </Icon>\n            ) : (\n              <Icon>\n                <Clients />\n              </Icon>\n            );\n          },\n          tabBarBadge: newConnections.length > 0 ? newConnections.length : null,\n        }}\n      />\n      <Nav.Screen\n        name=\"Todisteet\"\n        component={Credentials}\n        options={{\n          tabBarIcon: ({ size, focused, color }) => {\n            return focused ? (\n              <Icon>\n                <PaymentSelected />\n              </Icon>\n            ) : (\n              <Icon>\n                <Payment />\n              </Icon>\n            );\n          },\n          tabBarBadge: newCredentials.length > 0 ? newCredentials.length : null,\n        }}\n      />\n      <Nav.Screen\n        name=\"Skannaa\"\n        component={Scan}\n        options={{\n          tabBarIcon: ({ size, focused, color }) => {\n            return focused ? (\n              <Icon>\n                <QrCodeSelected />\n              </Icon>\n            ) : (\n              <Icon>\n                <QrCode />\n              </Icon>\n            );\n          },\n        }}\n      />\n      <Nav.Screen\n        name=\"Menu\"\n        component={Menu}\n        options={{\n          tabBarIcon: ({ size, focused, color }) => {\n            return focused ? (\n              <Icon>\n                <MoreSelected />\n              </Icon>\n            ) : (\n              <Icon>\n                <More />\n              </Icon>\n            );\n          },\n        }}\n      />\n    </Nav.Navigator>\n  );\n};\n\nexport default Navigations;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst socketSlice = createSlice({\n    name: 'state',\n    initialState: {\n        socket: undefined,\n    },\n    reducers: {\n        setSocket: (state, action) => {\n            console.log('settings socket to', action.payload);\n            state.socket = action.payload;\n        },\n        removeSocket: (state, action) => {\n            state.socket = undefined;\n        },\n    },\n});\n\nexport const { setSocket, removeSocket } = socketSlice.actions;\n\nexport default socketSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { View } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nimport { SOCKETBASE } from \"../Config\";\nimport { removeSocket, setSocket } from \"../socketSlice\";\n\nconst Socket = ({ children }) => {\n    const dispatch = useDispatch();\n    const state_socket = useSelector(state => state.socket.socket);\n    console.log('reduxed socket', state_socket);\n    useEffect(() => {\n        console.log('useEffect');\n        const initSocket = async () => {\n            console.log('initSocket');\n            if (!state_socket) {\n                console.log('no state socket');\n                const socket = io(SOCKETBASE, data => {\n                    console.log('socket', data);\n                });\n                if(!state_socket){\n                    console.log('dispatching to redux');\n                    dispatch(setSocket(socket));\n                }\n                socket.on('message', msg => {\n                    console.log('message', msg);\n                    try {\n                        console.log('msgdata', msg.data);\n                        if(msg.type==='update'){\n                            console.log('received update');\n                        }\n                    } catch (e) {\n                        console.log(e);\n                        //do nothing\n                    }\n                });\n                return socket;\n            }\n        };\n        initSocket();\n        return () => {\n            if (state_socket) {\n                console.log('closing socket', state_socket);\n                state_socket.close();\n            }\n            dispatch(removeSocket());\n        };\n    }, [dispatch]);\n    return <View style={{ flexGrow: 1 }}>{children}</View>;\n};\n\nexport default Socket;","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { Provider } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Navigations from './Navigations';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { useColorScheme } from 'react-native';\nimport { configureStore } from '@reduxjs/toolkit';\nimport connectionSlice from './connectionSlice';\nimport credentialsSlice from './credentialsSlice';\nimport socketSlice from './socketSlice';\nimport Socket from './Components/Socket';\n\nconst queryClient = new QueryClient();\n\nconst store = configureStore({\n    reducer: {\n        connections: connectionSlice,\n        credentials: credentialsSlice,\n        socket: socketSlice,\n    },\n});\n\nconst App: () => Node = () => {\n    const isDarkMode = useColorScheme() === 'dark';\n    return (\n        <Provider store={store}>\n            <Socket>\n                <QueryClientProvider client={queryClient}>\n                    <NavigationContainer>\n                        <Navigations />\n                    </NavigationContainer>\n                </QueryClientProvider>\n            </Socket>\n        </Provider>\n    );\n};\n\nexport default App;\n","/**\n * @format\n */\n\nimport { AppRegistry } from 'react-native';\nimport App from './App';\nimport { name as appName } from './app.json';\n\nAppRegistry.registerComponent(appName, () => App);\nAppRegistry.runApplication(appName, {\n  rootTag: document.getElementById('root'),\n});\n"],"sourceRoot":""}